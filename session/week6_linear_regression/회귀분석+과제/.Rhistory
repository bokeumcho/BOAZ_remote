library(MASS)
library(dplyr)
d <- data.frame(x=c(1, 2, 3, 4, 5) , y=c("a", "b", "c", "d", "e"))
d
df<-data.frame(kor= c(8,6,9,4,5,5,4,10,7,7),mat <- c(7,5,4,5,8,9,7,10,5,7),eng <- c(2,7,9,7,9,6,10,9,4,5))
df
df<-data.frame(kor= c(8,6,9,4,5,5,4,10,7,7),mat= c(7,5,4,5,8,9,7,10,5,7),eng=c(2,7,9,7,9,6,10,9,4,5))
df
apply(xyf[,1:2],2,sum)
# 1.1 행 단위의 계산(평균) 값을 벡터로 출력하라
apply(df,1,mean)
#1.2 열 단위의 계산(합계) 값을 벡터로 출력하라
apply(df,2,sum)
#1.3 grade의 모든 요소 값에 2를 곱해 matrix로 출력하라
apply(df,1,function(x){x*2})
apply(df,2,function(x){x*2})
library(dplyr)
library(tidyr)
ms <- read.csv("./2018-3-mobile-user-data.csv")
ms <- read.csv("./데이터+전처리+과제.csv")
ms <- read.csv("./2018-3-mobile-user-data.csv")
ms <- read.csv("./R/2018-3-mobile-user-data.csv")
getwd()
setwd("C:/Users/USER/Downloads")
ms <- read.csv("./R/2018-3-mobile-user-data.csv")
ms <- read.csv("./2018-3-mobile-user-data.csv")
head(ms)
gather(ms,'월(달)','가입자','X2016.12월', 'X2017.3월', 'X2017.4월', 'X2017.5월', 'X2017.6월', 'X2017.7월', 'X2017.8월' 'X2017.9월', 'X2017.10월', 'X2017.11월')
gather(ms,month,gaip,X2016.12월,X2017.3월,X2017.4월,X2017.5월,X2017.6월,X2017.7월,X2017.8월,X2017.9월,X2017.10월,X2017.11월,X2017.12월,X2018.1월,X2018.2월,X2018.3월)
library(dplyr)
library(tidyr)
install.packages(tidyr)
install.packages("tidyr")
library(tidyr)
gather(ms,month,gaip,X2016.12월,X2017.3월,X2017.4월,X2017.5월,X2017.6월,X2017.7월,X2017.8월,X2017.9월,X2017.10월,X2017.11월,X2017.12월,X2018.1월,X2018.2월,X2018.3월)
gathered<-gather(ms,month,gaip,X2016.12월,X2017.3월,X2017.4월,X2017.5월,X2017.6월,X2017.7월,X2017.8월,X2017.9월,X2017.10월,X2017.11월,X2017.12월,X2018.1월,X2018.2월,X2018.3월)
# 2.2 위의 데이터를 활용하여 통신사별+월별 가입자수 집계해주세요(합계)
gathered%>%group_by(통신사)
# 2.2 위의 데이터를 활용하여 통신사별+월별 가입자수 집계해주세요(합계)
group_by(ms,통신사)
# 2.2 위의 데이터를 활용하여 통신사별+월별 가입자수 집계해주세요(합계)
group_by(gathered,통신사)
# 2.2 위의 데이터를 활용하여 통신사별+월별 가입자수 집계해주세요(합계)
gathered%>% group_by(통신사)%>%summarise(gaipja=sum(gaip,na.rm=TRUE))
gathered%>% group_by(month)%>%summarise(gaipja=sum(gaip,na.rm=TRUE))
gathered%>% group_by(통신사,month)%>%summarise(gaipja=sum(gaip,na.rm=TRUE))
gathered%>% group_by(구분,month)%>%summarise(gaipja=sum(gaip,na.rm=TRUE))
gathered%>% filter(month=='X2017.3월')%>%group_by(통신사,month)%>%summarise(gaipja=sum(gaip,na.rm=TRUE))
library(ggplot2)
library(dplyr)
# 1. cut 데이터의 빈도를 나타내는 histogram을 그리시오
cut_freq <- data.frame(table(diamonds$cut))
cut_freq %>% ggplot(aes(Var1, Freq)) + geom_histogram(stat = "identity")
# 2. cut 데이터의 빈도를 나타내는 Pie Chart를 그리시오
cut_freq %>% ggplot(aes(Var1, Freq)) + geom_histogram(stat = "identity") + coord_polar("x")
# 3. carat별로 diamond의 색 분포를 나타내는 histogram을 그리시오
diamonds %>% ggplot(aes(carat, fill=color)) + geom_bar(position = "fill")
# 4. carat과 price에 대한 scatterplot을 그리시오.
diamonds %>% ggplot(aes(carat, price)) + geom_point()
# 5. 3캐럿 이상인 다이아몬드들의 carat과 price에 대한 scatterplot을 그리시오.
# color는 clarity로 하고, point의 size는 cut으로하시오
diamonds %>% filter(carat>=3) %>% ggplot(aes(carat, price)) + geom_point(aes(color=clarity, size=cut))
library(ggplot2)
library(dplyr)
setwd('C:/Users/USER/Desktop/BOAZ/session/week6_linear_regression/회귀분석+과제)
setwd('C:/Users/USER/Desktop/BOAZ/session/week6_linear_regression/회귀분석+과제')
setwd('C:/Users/USER/Desktop/BOAZ/session/week6_linear_regression/회귀분석+과제')
#1
sales<-read.csv('sales.csv')
head(sales)
#1-(a)
sales %>% ggplot(aes(x,y)) +geom_point()
#1-(b)
lr1 <- lm(y ~ x, sales)
lr1
#1-(c)
summary(lr1)
#2
multiple<-read.csv('multiple.txt',sep = '')
head(multiple)
#2-(a)
multiple %>% ggplot(aes(x1,y)) +geom_point()
multiple %>% ggplot(aes(x2,y)) +geom_point()
pairs(multiple)
#2-(b)
lr2 <- lm(y ~ x1+x2, multiple)
lr2
summary(lr2)
#2-(c)
#backward elimination(default)
step(lr2)
#forward selection
step(lr2, direction="forward")
#both
step(lr2, direction='both')
